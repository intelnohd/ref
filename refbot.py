import telebot
import sqlite3
from telebot import TeleBot, types
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
from database import init_db, add_user, get_user, update_user, get_top_users, add_referral, get_referrals, get_invites_count, add_is_banned_column

# –í—ã–∑–æ–≤–∏—Ç–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞
init_db()

# –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–π —Ç–æ–∫–µ–Ω
TOKEN = '7769368074:AAEKrvcUcSJHFLlVnEk6jHsfrXnOVu_8gZg'
bot = telebot.TeleBot(TOKEN)


premium_prices = {
    "1_month": 10000,
    "12_months": 120000,
    "3_months_gift": 30000,
    "6_months_gift": 60000,
    "12_months_gift": 120000
}

stars_prices = {
    "1_stars": 1000,
    "2_stars": 2000,
    "3_stars": 3000,
    "4_stars": 4000,
    "5_stars": 5000
}

admin_settings = {
    "user_admin": "@user_admin"  # –Æ–∑–µ—Ä–Ω–µ–π–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
}

# –ù–∞—á–∞–ª—å–Ω–∞—è –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
MIN_WITHDRAW_AMOUNT = 10000  # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –≤—ã–≤–æ–¥–∞ –≤ —Å—É–º–º–∞—Ö (–∏–∑–º–µ–Ω–∏—Ç–µ –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)


# –°—É–º–º–∞ –∑–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
INVITE_BONUS = 5000  # –ò–∑–º–µ–Ω–∏—Ç–µ –Ω–∞ –Ω—É–∂–Ω—É—é —Å—É–º–º—É

# Telegram ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –∫—É–¥–∞ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –∑–∞—è–≤–∫–∞
ADMIN_ID = 7769368074  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID –≤–∞—à–µ–≥–æ Telegram –∞–∫–∫–∞—É–Ω—Ç–∞

# –°–ø–∏—Å–æ–∫ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤
REQUIRED_CHANNELS = [
    {'name': '–ö–∞–Ω–∞–ª 1', 'username': 'channel1', 'active': False},
    {'name': '–ö–∞–Ω–∞–ª 2', 'username': '@channel2', 'active': False},
    {'name': '–ö–∞–Ω–∞–ª 3', 'username': '@channel3', 'active': False},
    {'name': '–ö–∞–Ω–∞–ª 4', 'username': '@channel4', 'active': False},
    {'name': '–ö–∞–Ω–∞–ª 5', 'username': '@channel5', 'active': False},
    {'name': '–ö–∞–Ω–∞–ª 6', 'username': '@channel6', 'active': False},
    {'name': '–ö–∞–Ω–∞–ª 7', 'username': '@channel7', 'active': False},
    {'name': '–ö–∞–Ω–∞–ª 8', 'username': '@channel8', 'active': False},
    {'name': '–ö–∞–Ω–∞–ª 9', 'username': '@channel9', 'active': False},
    {'name': '–ö–∞–Ω–∞–ª 10', 'username': '@channel10', 'active': False}


]


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
def create_main_menu(user_id):
    keyboard = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    btn1 = types.KeyboardButton("üí∏ Pul ishlash")
    btn2 = types.KeyboardButton("üí∞ Hisobim")
    btn3 = types.KeyboardButton("‚≠ê Premium olish")
    btn4 = types.KeyboardButton("üìÑ Murojaat")
    btn5 = types.KeyboardButton("üèÜ Top reyting")
    btn6 = types.KeyboardButton("‚≠ê Stars olish")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if user_id == ADMIN_ID:  # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å ADMIN_ID
        btn_admin = types.KeyboardButton("üîß Admin panel")
        keyboard.add(btn_admin)

    keyboard.add(btn1)
    keyboard.add(btn2, btn3)
    keyboard.add(btn4, btn5)
    keyboard.add(btn6)
    return keyboard


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–∫–∏ "Orqaga"
def create_back_button():
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    back_button = types.KeyboardButton("üîô Orqaga")
    keyboard.add(back_button)
    return keyboard


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–Ω—é –ø–æ–¥–ø–∏—Å–∫–∏
def create_subscription_menu():
    keyboard = types.InlineKeyboardMarkup()
    for channel in REQUIRED_CHANNELS:
        if channel['active']:
            button = types.InlineKeyboardButton(
                f"{channel['name']}",
                url=f"https://t.me/{channel['username'][1:]}")
            keyboard.add(button)
    check_button = types.InlineKeyboardButton(
        "üîÑ Obunani tekshirish", callback_data="check_subscription")
    keyboard.add(check_button)
    return keyboard



# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª—ã
def check_subscriptions(user_id):
    not_subscribed = []
    for channel in REQUIRED_CHANNELS:
        if channel['active']:
            try:
                chat_member = bot.get_chat_member(channel['username'], user_id)
                if chat_member.status in ['left', 'kicked']:
                    not_subscribed.append(channel)
            except Exception as e:
                print(f"Obunani tekshirishda xato: {e}")
                not_subscribed.append(channel)
    return not_subscribed



# –ù–∞—á–∞–ª—å–Ω–∞—è —Ç–æ—á–∫–∞ /start
@bot.message_handler(commands=['start'])
def start(message):
    user_id = message.from_user.id  # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    referrer_id = None  # –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ –Ω–µ –∑–∞–¥–∞–Ω

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞ –≤ –∫–æ–º–∞–Ω–¥–µ
    if len(message.text.split()) > 1:
        referrer_id = int(message.text.split()[1])  # –ò–∑–≤–ª–µ–∫–∞–µ–º referrer_id –∏–∑ –∫–æ–º–∞–Ω–¥—ã
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    add_user(user_id, balance=0, referrer_id=referrer_id)
    
    # –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ —Ç–∞–±–ª–∏—Ü—É —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
    if referrer_id:
        add_referral(referrer_id, user_id)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–≤—è–∑—å –º–µ–∂–¥—É —Ä–µ—Ñ–µ—Ä–∞–ª–æ–º –∏ –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–∏–º
    
    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    bot.send_message(
        message.chat.id, 
        "üñ• Xush kelibsiz! Asosiy menu.",
        reply_markup=create_main_menu(user_id)  # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —É—á–µ—Ç–æ–º user_id
    )



# –§—É–Ω–∫—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏, –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–≥–æ
def complete_registration(user_id, message):
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ –±–∞–∑—ã
    user_info = get_user(user_id)
    referrer_id = user_info.get('referrer_id')

    # –ï—Å–ª–∏ —Ä–µ—Ñ–µ—Ä–µ—Ä —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –±–∞–ª–∞–Ω—Å –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π —É –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–≥–æ
    if referrer_id:
        referrer_info = get_user(referrer_id)
        if referrer_info:
            # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–≥–æ
            new_balance = referrer_info['balance'] + INVITE_BONUS
            update_user(referrer_id, new_balance)
            
            # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π —É –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–≥–æ
            update_invites_count(referrer_id)

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–º—É
            bot.send_message(
                referrer_id,
                f"üéâ Sizda yangi referal @{message.from_user.username}! "
                f"Sizning balansingiz {new_balance} so'mga oshdi. Takliflaringiz soni: {referrer_info['invites'] + 1} ta."
            )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–æ–≤–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    bot.send_message(
        message.chat.id,
        "üñ• Xush kelibsiz! Asosiy menu.",
        reply_markup=create_main_menu(user_id)  # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    )


@bot.message_handler(func=lambda message: message.text == "‚≠ê Premium olish")
def premium_olish(message):
    # Text for premium options
    text = ("‚úÖ Premium sotib olish uchun narxlar bilan tanishing!\n\n"
            "Profilga kirb:\n"
            "[1] ‚≠ê 1 Oylik Premium - {} so'm\n"
            "[2] ‚≠ê 12 Oylik Premium - {} so'm\n\n"
            "Gift:\n"
            "[3] ‚≠ê 3 Oylik Premium - {} so'm\n"
            "[4] ‚≠ê 6 Oylik Premium - {} so'm\n"
            "[5] ‚≠ê 12 Oylik Premium - {} so'm\n\n"
            "‚¨áÔ∏è Quyidagilardan birini tanlang:").format(
                premium_prices["1_month"], premium_prices["12_months"],
                premium_prices["3_months_gift"],
                premium_prices["6_months_gift"],
                premium_prices["12_months_gift"])

    markup = types.InlineKeyboardMarkup(row_width=3)
    
    buttons2 = [
        types.InlineKeyboardButton("‚≠ê 1", callback_data="1_month"),
        types.InlineKeyboardButton("‚≠ê 2", callback_data="12_months"),
        types.InlineKeyboardButton("‚≠ê 3", callback_data="3_months_gift"),
        types.InlineKeyboardButton("‚≠ê 4", callback_data="6_months_gift"),
        types.InlineKeyboardButton("‚≠ê 5", callback_data="12_months_gift")
    ]

    markup.add(buttons2[0], buttons2[1], buttons2[2])  # –ü–µ—Ä–≤—ã–π —Ä—è–¥
    markup.add(buttons2[3], buttons2[4])               # –í—Ç–æ—Ä–æ–π —Ä—è–¥

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–µ–º–∏—É–º-–æ–ø—Ü–∏—è–º–∏ –∏ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    bot.send_message(message.chat.id, text, reply_markup=markup)


# Function to show admin contact
@bot.callback_query_handler(
    func=lambda call: call.data in ["1_month", "12_months", "3_months_gift",
                                   "6_months_gift", "12_months_gift"]
)
def show_admin_contact(call):
    # Send the admin's username when a premium button is clicked
    bot.send_message(
        call.message.chat.id,
        f"‚≠êÔ∏è Premium olish uchun admin useri - {admin_settings['user_admin']}"
    )


@bot.message_handler(func=lambda message: message.text == "‚≠ê Stars olish")
def stars_olish(message):
    # –¢–µ–∫—Å—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–∫—É–ø–∫–µ –∑–≤–µ–∑–¥ –∏ –∫–æ–Ω—Ç–∞–∫—Ç–æ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    text = ("‚≠êÔ∏è Stars olish uchun admin useri - {}\n\n"
            "‚úÖ Stars sotib olish uchun narxlar bilan tanishing:\n\n"
            "[1] ‚≠ê 50 Stars - {} so'm\n"
            "[2] ‚≠ê 100 Stars - {} so'm\n"
            "[3] ‚≠ê 150 Stars - {} so'm\n\n"
            "[4] ‚≠ê 250 Stars - {} so'm\n\n"
            "[5] ‚≠ê 350 Stars - {} so'm\n\n"
            "‚¨áÔ∏è Quyidagilardan birini tanlang:").format(
                admin_settings["user_admin"], stars_prices["1_stars"],
                stars_prices["2_stars"], stars_prices["3_stars"],
                stars_prices["4_stars"], stars_prices["5_stars"])

    markup = types.InlineKeyboardMarkup(row_width=3)

    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
    buttons = [
        types.InlineKeyboardButton("‚≠ê 1", callback_data="stars_1_stars"),
        types.InlineKeyboardButton("‚≠ê 2", callback_data="stars_2_stars"),
        types.InlineKeyboardButton("‚≠ê 3", callback_data="stars_3_stars"),
        types.InlineKeyboardButton("‚≠ê 4", callback_data="stars_4_stars"),
        types.InlineKeyboardButton("‚≠ê 5", callback_data="stars_5_stars"),
    ]

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–≤—É–º—è —Ä—è–¥–∞–º–∏
    markup.add(buttons[0], buttons[1], buttons[2])  # –ü–µ—Ä–≤—ã–π —Ä—è–¥
    markup.add(buttons[3], buttons[4])  # –í—Ç–æ—Ä–æ–π —Ä—è–¥
    
    bot.send_message(message.chat.id, text, reply_markup=markup)



# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–∫–∞–∑–∞ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –∞–¥–º–∏–Ω–∞ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "Stars"
@bot.callback_query_handler(func=lambda call: call.data in [
    "stars_1_stars", "stars_2_stars", "stars_3_stars", "stars_4_stars",
    "stars_5_stars"
])
def show_admin_contact(call):
    # –í—ã–≤–æ–¥–∏–º –∫–æ–Ω—Ç–∞–∫—Ç –∞–¥–º–∏–Ω–∞ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –ª—é–±—É—é –∫–Ω–æ–ø–∫—É Stars
    bot.send_message(
        call.message.chat.id,
        f"‚≠êÔ∏è Stars olish uchun admin useri - {admin_settings['user_admin']}")


@bot.message_handler(func=lambda message: message.text == "üîß Admin panel" and
                     message.from_user.id == ADMIN_ID)
def admin_panel(message):
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(
        types.InlineKeyboardButton("Referalga summani o'gartirish",
                                   callback_data="change_bonus"))
    keyboard.add(
        types.InlineKeyboardButton("Premiumga narxlarni o'zgartirish",
                                   callback_data="change_prices"))
    keyboard.add(
        types.InlineKeyboardButton("Globalniy habar yuborish",
                                   callback_data="broadcast_message"))
    keyboard.add(
        types.InlineKeyboardButton(
            "Premium/Starsdagi admin userini o'zgartirish",
            callback_data="change_user_admin"))
    keyboard.add(
        types.InlineKeyboardButton("Stars narxlarini o'zgartirish",
                                   callback_data="change_stars_prices"))
    keyboard.add(
        types.InlineKeyboardButton("Homiy kanallarni ozgartirish",
                                   callback_data="change_channels"))
    keyboard.add(
        types.InlineKeyboardButton("Kanallarni ko'rish",
                                   callback_data="view_channels"))
    keyboard.add(
        types.InlineKeyboardButton("Foydalanuvchi qidirish",
                                   callback_data="view_user"))
    keyboard.add(
        types.InlineKeyboardButton("Minimal yechib olish summasini o'zgartirish",
                                   callback_data="set_min_withdraw"))
    bot.send_message(message.chat.id, "üîß Admin panel", reply_markup=keyboard)

@bot.callback_query_handler(func=lambda call: call.data == "view_user")
def ask_user_id(call):
    bot.send_message(call.message.chat.id, "Iltimos, foydalanuvchi ID kiriting:")
    bot.register_next_step_handler(call.message, get_user_info)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
def get_user_info(message):
    try:
        user_id = int(message.text)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–≤–µ–¥–µ–Ω–æ —á–∏—Å–ª–æ
        user = get_user(user_id)     # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö

        if user:
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å: –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∏–ª–∏ –∞–∫—Ç–∏–≤–µ–Ω
            status = "Blocked" if user['is_banned'] == 1 else "Active"
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            response = (f"User ID: {user_id}\n"
                        f"Balance: {user['balance']} so'm\n"
                        f"Invites: {user['invites']}\n"
                        f"Status: {status}\n\n"
                        "Quyidagilardan birini tanlang:\n"
                        "1Ô∏è‚É£ Block\n"
                        "2Ô∏è‚É£ Unblock")
            
            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ Block, Unblock –∏ –ù–∞–∑–∞–¥
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
            markup.add("1Ô∏è‚É£ Block", "2Ô∏è‚É£ Unblock", "üîô Orqaga")

            bot.send_message(message.chat.id, response, reply_markup=markup)
            
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Ñ—É–Ω–∫—Ü–∏–∏ block_unblock_user, –ø–µ—Ä–µ–¥–∞–≤ user_id
            bot.register_next_step_handler(message, block_unblock_user, user_id)
        else:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω
            bot.send_message(message.chat.id, "Bunday foydalanuvchi topilmadi.")
    except ValueError:
        bot.send_message(message.chat.id, "Iltimos, to'g'ri Telegram ID kiriting.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
@bot.message_handler(func=lambda message: message.text == "üîô Orqaga")
def go_back(message):
    bot.send_message(
        message.chat.id,
        "Asosiy menyu:",
        reply_markup=create_main_menu(message.from_user.id)  # –ø–µ—Ä–µ–¥–∞–µ–º user_id –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –º–µ–Ω—é
    )

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
def block_unblock_user(message, user_id):
    if message.text == "1Ô∏è‚É£ Block":
        update_user(user_id, is_banned=1)
        bot.send_message(message.chat.id, f"Foydalanuvchi {user_id} bloklandi.")
    elif message.text == "2Ô∏è‚É£ Unblock":
        update_user(user_id, is_banned=0)
        bot.send_message(message.chat.id, f"Foydalanuvchi {user_id} unblocked.")
    elif message.text == "üîô Orqaga":  # –ï—Å–ª–∏ –Ω–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–∫—É –ù–∞–∑–∞–¥
        go_back(message)  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    else:
        bot.send_message(message.chat.id, "Iltimos, to'g'ri variantni tanlang.")


@bot.callback_query_handler(func=lambda call: call.data == "set_min_withdraw")
def set_min_withdraw(call):
    if call.from_user.id == ADMIN_ID:
        bot.send_message(
            call.message.chat.id,
            f"Hozirgi minimal yechib olish summasi: {MIN_WITHDRAW_AMOUNT} so'm.\n"
            "Yangi minimal yechib olish summasini kiriting:")
        bot.register_next_step_handler(call.message, save_min_withdraw)
    else:
        bot.send_message(call.message.chat.id, "Sizda ushbu amalni bajarish uchun huquq yo'q.")

def save_min_withdraw(message):
    global MIN_WITHDRAW_AMOUNT
    try:
        new_min_amount = int(message.text)
        if new_min_amount > 0:
            MIN_WITHDRAW_AMOUNT = new_min_amount
            bot.send_message(
                message.chat.id,
                f"Minimal yechib olish summasi muvaffaqiyatli o'zgartirildi: {MIN_WITHDRAW_AMOUNT} so'm.")
        else:
            bot.send_message(message.chat.id, "Summani musbat raqam sifatida kiriting.")
    except ValueError:
        bot.send_message(message.chat.id, "Iltimos, faqat raqam kiriting.")


@bot.callback_query_handler(func=lambda call: call.data == "change_user_admin")
def callback_change_user_admin(call):
    bot.send_message(call.message.chat.id,
                     "Yangi admin userini kiriting (–Ω–∞–ø—Ä–∏–º–µ—Ä, @new_admin):")
    bot.register_next_step_handler(call.message, set_user_admin)


def set_user_admin(message):
    global admin_settings
    new_admin_user = message.text
    if new_admin_user.startswith("@"):
        admin_settings["user_admin"] = new_admin_user
        bot.send_message(
            message.chat.id,
            f"Admin user muvaffaqiyatli o'zgartirildi: {new_admin_user}")
    else:
        bot.send_message(message.chat.id,
                         "Iltimos, userni '@' bilan kiriting.")

@bot.callback_query_handler(
    func=lambda call: call.data == "change_stars_prices")
def callback_change_stars_prices(call):
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(
        types.InlineKeyboardButton("‚≠ê 50 Stars narxini o'zgartirish",
                                   callback_data="change_1_star_price"))
    keyboard.add(
        types.InlineKeyboardButton("‚≠ê 100 Stars narxini o'zgartirish",
                                   callback_data="change_2_stars_price"))
    keyboard.add(
        types.InlineKeyboardButton("‚≠ê 150 Stars narxini o'zgartirish",
                                   callback_data="change_3_stars_price"))
    keyboard.add(
        types.InlineKeyboardButton("‚≠ê 250 Stars narxini o'zgartirish",
                                   callback_data="change_4_stars_price"))
    keyboard.add(
        types.InlineKeyboardButton("‚≠ê 350 Stars narxini o'zgartirish",
                                   callback_data="change_5_stars_price"))
    bot.send_message(
        call.message.chat.id,
        "‚≠êÔ∏è Stars narxlarini o'zgartirish uchun biror bir variantni tanlang.",
        reply_markup=keyboard)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω—ã 1 Star
@bot.callback_query_handler(
    func=lambda call: call.data == "change_1_star_price")
def change_1_star_price(call):
    bot.send_message(call.message.chat.id,
                     "Yangi narxni kiriting (masalan, 50000 so'm):")
    bot.register_next_step_handler(call.message, set_1_star_price)


def set_1_star_price(message):
    try:
        new_price = int(message.text)
        stars_prices["1_stars"] = new_price
        bot.send_message(
            message.chat.id,
            f"‚≠ê 50 Stars narxi muvaffaqiyatli o'zgartirildi: {new_price} so'm")
    except ValueError:
        bot.send_message(message.chat.id, "Iltimos, to'g'ri raqam kiriting.")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω—ã 5 Stars
@bot.callback_query_handler(
    func=lambda call: call.data == "change_2_stars_price")
def change_2_stars_price(call):
    bot.send_message(call.message.chat.id,
                     "Yangi narxni kiriting (masalan, 100000 so'm):")
    bot.register_next_step_handler(call.message, set_2_stars_price)


def set_2_stars_price(message):
    try:
        new_price = int(message.text)
        stars_prices["2_stars"] = new_price
        bot.send_message(
            message.chat.id,
            f"‚≠ê 100 Stars narxi muvaffaqiyatli o'zgartirildi: {new_price} so'm"
        )
    except ValueError:
        bot.send_message(message.chat.id, "Iltimos, to'g'ri raqam kiriting.")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω—ã 10 Stars
@bot.callback_query_handler(
    func=lambda call: call.data == "change_3_stars_price")
def change_3_stars_price(call):
    bot.send_message(call.message.chat.id,
                     "Yangi narxni kiriting (masalan, 150000 so'm):")
    bot.register_next_step_handler(call.message, set_3_stars_price)


def set_3_stars_price(message):
    try:
        new_price = int(message.text)
        stars_prices["3_stars"] = new_price
        bot.send_message(
            message.chat.id,
            f"‚≠ê 150 Stars narxi muvaffaqiyatli o'zgartirildi: {new_price} so'm"
        )
    except ValueError:
        bot.send_message(message.chat.id, "Iltimos, to'g'ri raqam kiriting.")


@bot.callback_query_handler(
    func=lambda call: call.data == "change_4_stars_price")
def change_4_stars_price(call):
    bot.send_message(call.message.chat.id,
                     "Yangi narxni kiriting (masalan, 200000 so'm):")
    bot.register_next_step_handler(call.message, set_4_stars_price)


def set_4_stars_price(message):
    try:
        new_price = int(message.text)
        stars_prices["4_stars"] = new_price
        bot.send_message(
            message.chat.id,
            f"‚≠ê 250 Stars narxi muvaffaqiyatli o'zgartirildi: {new_price} so'm"
        )
    except ValueError:
        bot.send_message(message.chat.id, "Iltimos, to'g'ri raqam kiriting.")


@bot.callback_query_handler(
    func=lambda call: call.data == "change_5_stars_price")
def change_5_stars_price(call):
    bot.send_message(call.message.chat.id,
                     "Yangi narxni kiriting (masalan, 300000 so'm):")
    bot.register_next_step_handler(call.message, set_5_stars_price)


def set_5_stars_price(message):
    try:
        new_price = int(message.text)
        stars_prices["5_stars"] = new_price
        bot.send_message(
            message.chat.id,
            f"‚≠ê 350 Stars narxi muvaffaqiyatli o'zgartirildi: {new_price} so'm"
        )
    except ValueError:
        bot.send_message(message.chat.id, "Iltimos, to'g'ri raqam kiriting.")


@bot.callback_query_handler(func=lambda call: call.data == "change_prices")
def set_premium_prices(call):
    global premium_prices  # Access global variable
    bot.send_message(
        call.message.chat.id,
        "Narxlarni vergul bilan ajratib kiriting: 1 oy, 12 oy, 3 oy gift, 6 oy gift, 12 oy gift"
    )
    bot.register_next_step_handler(call.message, update_premium_prices)


def update_premium_prices(message):
    global premium_prices
    try:
        prices = list(map(int, message.text.split(',')))
        if len(prices) == 5:
            premium_prices["1_month"], premium_prices[
                "12_months"], premium_prices["3_months_gift"], premium_prices[
                    "6_months_gift"], premium_prices["12_months_gift"] = prices
            bot.send_message(message.chat.id,
                             "Narxlar muvaffaqiyatli yangilandi.")
        else:
            bot.send_message(message.chat.id,
                             "Iltimos, to'g'ri formatda 5 ta narx kiriting.")
    except ValueError:
        bot.send_message(message.chat.id,
                         "Iltimos, faqat raqamlarni kiriting.")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–æ–Ω—É—Å–∞ –¥–ª—è —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
@bot.callback_query_handler(func=lambda call: call.data == "change_bonus")
def callback_change_bonus(call):
    bot.send_message(call.message.chat.id, "Yangi summani kiritish:")
    bot.register_next_step_handler(call.message, set_invite_bonus)


def set_invite_bonus(message):
    try:
        new_bonus = int(message.text)
        # –ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –Ω–æ–≤—É—é —Å—É–º–º—É –±–æ–Ω—É—Å–∞
        global INVITE_BONUS
        INVITE_BONUS = new_bonus
        bot.send_message(message.chat.id, f"Summa kiritldi {new_bonus}")
    except ValueError:
        bot.send_message(message.chat.id, "Iltimos son yozing:")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
@bot.callback_query_handler(func=lambda call: call.data == "broadcast_message")
def callback_broadcast_message(call):
    bot.send_message(call.message.chat.id, "Globalniy habarni yozing:")
    bot.register_next_step_handler(call.message, broadcast_message)


def broadcast_message(message):
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    conn = init_db()
    cursor = conn.cursor()
    cursor.execute('SELECT user_id FROM users')  # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ user_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    users = cursor.fetchall()

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    for user in users:
        bot.send_message(user[0], message.text)

    bot.send_message(message.chat.id, "Habar hammaga yuborildi")


@bot.callback_query_handler(func=lambda call: call.data == "change_channels")
def change_channels(call):
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏-—è—á–µ–π–∫–∞–º–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–∞–Ω–∞–ª–∞
    keyboard = types.InlineKeyboardMarkup(row_width=2)
    for i, channel in enumerate(REQUIRED_CHANNELS):
        button_text = f"{channel['name']} {'‚úÖ' if channel['active'] else 'üö´'}"
        callback_data = f"edit_channel_{i}"
        keyboard.add(types.InlineKeyboardButton(button_text, callback_data=callback_data))

    bot.send_message(call.message.chat.id, "Tahrirlash uchun kanalni tanlang:", reply_markup=keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–∞–Ω–∞–ª–∞ –Ω–∞ —É–∑–±–µ–∫—Å–∫–æ–º
@bot.callback_query_handler(func=lambda call: call.data.startswith("edit_channel_"))
def edit_channel(call):
    channel_index = int(call.data.split("_")[-1])
    selected_channel = REQUIRED_CHANNELS[channel_index]

    bot.send_message(
        call.message.chat.id,
        f"Tahrirlanmoqda: {selected_channel['name']} (faol: {selected_channel['active']})\n"
        "Yangi kanal nomini kiriting, format: Nomi, @username (yoki o'chirish uchun bo'sh qoldiring)\n"
        "Masalan: 'Kanal 1, @kanal1'")

    bot.register_next_step_handler(call.message, save_channel_info, channel_index)

def save_channel_info(message, channel_index):
    try:
        if message.text.strip():
            name, username = message.text.split(", ")
            REQUIRED_CHANNELS[channel_index]['name'] = name.strip()
            REQUIRED_CHANNELS[channel_index]['username'] = username.strip()
            REQUIRED_CHANNELS[channel_index]['active'] = True
        else:
            # –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å, –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ
            REQUIRED_CHANNELS[channel_index]['active'] = False
    except Exception as e:
        bot.send_message(message.chat.id, f"Xato: {e}")
    bot.send_message(message.chat.id, "Kanal yangilandi!")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–∞–Ω–∞–ª–æ–≤
@bot.callback_query_handler(func=lambda call: call.data == "view_channels")
def view_channels(call):
    if REQUIRED_CHANNELS:
        channels_info = "\n".join([
            f"Nom: {channel['name']}, Username: {channel['username']}"
            for channel in REQUIRED_CHANNELS
        ])
    else:
        channels_info = "Kanallar mavjud emas."

    bot.send_message(call.message.chat.id,
                     f"üîß Hozirgi kanallar:\n{channels_info}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "Murojaat"
@bot.message_handler(func=lambda message: message.text == "üìÑ Murojaat")
def handle_request(message):
    # –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç –∑–∞—è–≤–∫–∏
    bot.send_message(
        message.chat.id,
        "üìù Murojaat matnini yuboring:",
        reply_markup=create_back_button()
    )
    bot.register_next_step_handler(message, receive_request)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –∑–∞—è–≤–∫–∏
def receive_request(message):
    user_id = message.from_user.id
    request_text = message.text

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "üîô Orqaga"
    if request_text == "üîô Orqaga":
        # –ï—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ "Orqaga", –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        go_back(message)
    else:
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏ –∞–¥–º–∏–Ω—É
        bot.send_message(
            ADMIN_ID,
            f"üìù Murojaat:\n\n{request_text}\n\nUser ID: {user_id}"
        )

        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ
        bot.send_message(
            message.chat.id,
            "Sizning murojaatingiz yuborildi. Tez orada javob olasiz.",
            reply_markup=create_main_menu(user_id)  # –ü–µ—Ä–µ–¥–∞–µ–º user_id –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "Orqaga"
@bot.message_handler(func=lambda message: message.text == "üîô Orqaga")
def go_back(message):
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    bot.send_message(
        message.chat.id,
        "Asosiy menyu:",
        reply_markup=create_main_menu(message.from_user.id)  # –ü–µ—Ä–µ–¥–∞–µ–º user_id
    )


# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "Pul ishlash" 
@bot.message_handler(func=lambda message: message.text == "üí∏ Pul ishlash")
def send_unique_link(message):
    user_id = message.from_user.id
    unique_link = f"https://t.me/fest1212_bot?start={user_id}"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ username –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
    photo_path = "photo_2024-11-12_13-56-24.jpg"  # –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –≤–∞—à–µ–º—É —Ñ–æ—Ç–æ
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É "Ulashish"
    keyboard = InlineKeyboardMarkup()
    share_button = InlineKeyboardButton(
        text="Ulashish", 
        switch_inline_query=unique_link  # –≠—Ç–æ –ø–æ–∑–≤–æ–ª–∏—Ç –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ–º
    )
    keyboard.add(share_button)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –∏ –∫–Ω–æ–ø–∫–æ–π
    with open(photo_path, "rb") as photo:
        bot.send_photo(
            message.chat.id,
            photo,
            caption=(
                "üîó Sizning taklif havolangiz:\n\n"
                f"{unique_link}\n\n"
                "Yuqoridagi taklif havolangizni do'stlaringizga tarqating va har bir to'liq ro'yxatdan o'tgan "
                "taklifingiz uchun 500 so'm hisobingizga qo'shiladi."
            ),
            reply_markup=keyboard
        )


@bot.message_handler(func=lambda message: message.text == "üèÜ Top reyting")
def show_top_users(message):
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    top_users = get_top_users(limit=10)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–æ–ø–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ —É–∑–±–µ–∫—Å–∫–æ–º
    if top_users:
        ranking_text = "üèÜ Eng yuqori balansga ega 10 foydalanuvchi:\n\n"
        for index, user in enumerate(top_users, start=1):
            ranking_text += f"{index}. ID: {user['user_id']}, Balans: {user['balance']} so'm\n"
    else:
        ranking_text = "Top foydalanuvchilar ro'yxati bo'sh."

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–æ–ø–æ–º
    bot.send_message(message.chat.id, ranking_text)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "Hisobim"
@bot.message_handler(func=lambda message: message.text == "üí∞ Hisobim")
def show_account_info(message):
    user_id = message.from_user.id

    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    user_info = get_user(user_id)

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞—ë–º –µ–≥–æ –∏ –ø–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    if user_info is None:
        add_user(user_id, balance=0, referrer_id=None)
        user_info = get_user(user_id)  # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø–æ–ª–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏

    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π (–µ—Å–ª–∏ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ —Ä–∞–Ω–µ–µ)
    invites_count = get_invites_count(user_id)

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    account_info = (f"üîë Sizning ID raqamingiz: {user_id}\n"
                    f"üí∏ Balansingiz: {user_info['balance']} so'm\n"
                    f"üë§ Taklif qilganlar soni: {invites_count} ta")

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è –≤—ã–≤–æ–¥–∞ –¥–µ–Ω–µ–≥
    keyboard = types.InlineKeyboardMarkup()
    withdraw_button = types.InlineKeyboardButton("üíµ Pul chiqarish (Ton)", callback_data="withdraw")
    keyboard.add(withdraw_button)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –∫–Ω–æ–ø–∫–æ–π
    bot.send_message(message.chat.id, account_info, reply_markup=keyboard)



# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "Pul chiqarish"
@bot.callback_query_handler(func=lambda call: call.data == "withdraw")
def callback_withdraw_start(call):
    user_id = call.from_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    user_info = get_user(user_id)
    user_balance = user_info['balance'] if user_info else 0

    if user_balance < MIN_WITHDRAW_AMOUNT:
        bot.send_message(
            call.message.chat.id,
            f"Sizning balansingiz yechib olish uchun kamida {MIN_WITHDRAW_AMOUNT} so'm bo'lishi kerak.")
    else:
        bot.send_message(call.message.chat.id, "Yechib olish uchun summani kiriting:")
        bot.register_next_step_handler(call.message, handle_withdraw_amount)


def handle_withdraw_amount(message):
    user_id = message.from_user.id
    try:
        amount = int(message.text)
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        user_info = get_user(user_id)
        user_balance = user_info['balance'] if user_info else 0

        if amount < MIN_WITHDRAW_AMOUNT:
            bot.send_message(
                message.chat.id,
                f"Minimal yechib olish summasi {MIN_WITHDRAW_AMOUNT} so'm. Iltimos, katta miqdor kiriting.")
        elif amount > user_balance:
            bot.send_message(
                message.chat.id,
                "Sizning balansingizda yetarli mablag' yo'q. Iltimos, qaytadan urining.")
        else:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—É–º–º—É –≤—ã–≤–æ–¥–∞
            update_user(user_id, new_balance=user_balance - amount)
            bot.send_message(message.chat.id, "TON manzilingizni kiriting:")
            bot.register_next_step_handler(message, handle_withdraw_address)
    except ValueError:
        bot.send_message(message.chat.id, "Iltimos, faqat raqam kiriting.")



def handle_withdraw_address(message):
    user_id = message.from_user.id
    ton_address = message.text
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º TON –∞–¥—Ä–µ—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    update_user_address(user_id, ton_address)

    # –ü–æ–ª—É—á–∞–µ–º —Å—É–º–º—É –≤—ã–≤–æ–¥–∞
    user_info = get_user(user_id)
    amount = user_info.get('withdraw_amount', 0)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
    bot.send_message(
        ADMIN_ID,
        f"üìù Foydalanuvchi @{message.from_user.username} ({user_id}) pul chiqarishni so'radi:\n"
        f"üíµ Miqdori: {amount} so'm\n"
        f"üè¶ TON manzili: {ton_address}")

    bot.send_message(
        message.chat.id,
        "Sizning yechib olish so'rovingiz qabul qilindi. Tez orada amalga oshiriladi."
    )



# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling(none_stop=True)